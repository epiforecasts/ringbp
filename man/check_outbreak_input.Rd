% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checking.R
\name{check_outbreak_input}
\alias{check_outbreak_input}
\title{Check the function arguments of the outbreak simulation functions}
\usage{
check_outbreak_input(
  func = c("outbreak_setup", "outbreak_step", "outbreak_model", "scenario_sim"),
  n,
  initial_cases,
  r0_community,
  r0_isolated,
  r0_asymptomatic,
  disp_community,
  disp_isolated,
  disp_asymptomatic,
  incubation_period,
  k,
  onset_to_isolation,
  prop_ascertain,
  prop_asymptomatic,
  cap_max_days,
  cap_cases,
  quarantine,
  case_data
)
}
\arguments{
\item{func}{A \code{character} string with the name of the function where the
function is called to check the correct set of arguments.}

\item{n}{a positive \code{integer} scalar: number of simulations to run}

\item{initial_cases}{a nonnegative \code{integer} scalar: number of initial
or starting cases which are all assumed to be missed.}

\item{r0_community}{a positive \code{numeric} scalar: reproduction number for
non-isolated cases (must be >0)}

\item{r0_isolated}{a positive \code{numeric} scalar: reproduction number for
isolated cases (must be >0)}

\item{r0_asymptomatic}{a positive \code{numeric} scalar: reproduction number for
sub-clinical non-isolated cases (must be >0)}

\item{disp_community}{a positive \code{numeric} scalar: dispersion parameter for
non-isolated cases (must be >0)}

\item{disp_isolated}{a positive \code{numeric} scalar: dispersion parameter for
isolated cases (must be >0)}

\item{disp_asymptomatic}{a positive \code{numeric} scalar: dispersion parameter
for sub-clincial non-isolated cases (must be >0)}

\item{incubation_period}{a \code{function}: a random number generating
\code{function} that samples from incubation period distribution, the
\code{function} accepts a single \code{integer} argument specifying the number of
times to sample the incubation period (i.e. length of the \code{function}
output).}

\item{k}{a \code{numeric} scalar: skew parameter for sampling the serial
interval from the incubation period}

\item{onset_to_isolation}{a \code{function}: a random number generating
\code{function} that accepts a single \code{integer} argument specifying the
length of the \code{function} output.}

\item{prop_ascertain}{a \code{numeric} scalar probability (between 0 and 1
inclusive): proportion of infectious contacts ascertained by contact
tracing}

\item{prop_asymptomatic}{a \code{numeric} scalar probability (between 0 and 1
inclusive): proportion of cases that are completely asymptomatic
(subclinical)}

\item{cap_max_days}{a positive \code{integer} scalar: stop the simulation when
this many days is reached.}

\item{cap_cases}{a positive \code{integer} scalar: number of cumulative cases at
which the branching process (simulation) was terminated}

\item{quarantine}{a \code{logical} scalar: whether quarantine is in effect, if
\code{TRUE} then traced contacts are isolated before symptom onset; defaults to
\code{FALSE}}

\item{case_data}{a \code{data.table}: cases in outbreak so far; initially
generated by \code{\link[=outbreak_setup]{outbreak_setup()}}}
}
\value{
\code{TRUE} if all the checks pass or an error thrown by a \pkg{checkmate}
\verb{assert_*()} function if one or more of the inputs is invalid.
}
\description{
Check the function arguments of the outbreak simulation functions
}
\details{
If more than one argument is invalid, only a single error is
thrown with the first invalid argument encountered.
}
\keyword{internal}
