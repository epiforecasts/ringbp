% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scenario_sim.R
\name{scenario_sim}
\alias{scenario_sim}
\title{Run a specified number of simulations with identical parameters}
\usage{
scenario_sim(
  n.sim,
  prop.ascertain,
  cap_max_days,
  cap_cases,
  r0isolated,
  r0community,
  disp.iso,
  disp.com,
  k,
  onset_to_isolation,
  incubation_period,
  num.initial.cases,
  prop.asym,
  quarantine,
  r0subclin = NULL,
  disp.subclin = NULL
)
}
\arguments{
\item{n.sim}{a positive \code{integer} scalar: number of simulations to run}

\item{prop.ascertain}{a nonnegative \code{numeric} scalar: proportion of
infectious contacts ascertained by contact tracing (must be 0<=x<=1)}

\item{cap_max_days}{a positive \code{integer} scalar: stop the simulation when
this many days is reached.}

\item{cap_cases}{a positive \code{integer} scalar: number of cumulative cases at
which the branching process (simulation) was terminated}

\item{r0isolated}{a positive \code{numeric} scalar: reproduction number for
isolated cases (must be >0)}

\item{r0community}{a positive \code{numeric} scalar: reproduction number for
non-isolated cases (must be >0)}

\item{disp.iso}{a positive \code{numeric} scalar: dispersion parameter for
isolated cases (must be >0)}

\item{disp.com}{a positive \code{numeric} scalar: dispersion parameter for
non-isolated cases (must be >0)}

\item{k}{a \code{numeric} scalar: skew parameter for sampling the serial
interval from the incubation period}

\item{onset_to_isolation}{a \code{function}: a random number generating
\code{function} that accepts a single \code{integer} argument specifying the
length of the \code{function} output.}

\item{incubation_period}{a \code{function}: a random number generating
\code{function} that samples from incubation period distribution, the
\code{function} accepts a single \code{integer} argument specifying the number of
times to sample the incubation period (i.e. length of the \code{function}
output).}

\item{num.initial.cases}{a nonnegative \code{integer} scalar: number of initial
or starting cases which are all assumed to be missed.}

\item{prop.asym}{a nonnegative \code{numeric} scalar: proportion of cases that
are completely asymptomatic (sublinical) (between 0 and 1)}

\item{quarantine}{a \code{logical} scalar: whether quarantine is in effect, if
\code{TRUE} then traced contacts are isolated before symptom onset}

\item{r0subclin}{a positive \code{numeric} scalar: reproduction number for
sub-clinical non-isolated cases (must be >0)}

\item{disp.subclin}{a positive \code{numeric} scalar: dispersion parameter for
sub-clincial non-isolated cases (must be >0)}
}
\value{
A \code{data.table} object returning the results for multiple simulations using
the same set of parameters. The table has columns
\itemize{
\item week: The week in the simulation.
\item weekly_cases: The number of new cases that week.
\item cumulative: The cumulative cases.
\item effective_r0: The effective reproduction rate for the whole simulation
\item cases_per_gen: A list column with the cases per generation. This is repeated each row.
\item sim: Index column for which simulation.
}
}
\description{
Run a specified number of simulations with identical parameters
}
\examples{
res <- scenario_sim(
  n.sim = 5,
  num.initial.cases = 5,
  cap_max_days = 365,
  cap_cases = 2000,
  r0isolated = 0,
  r0community = 2.5,
  disp.iso = 1,
  disp.com = 0.16,
  k = 0.7,
  onset_to_isolation = \(x) stats::rweibull(n = x, shape = 2.5, scale = 5),
  incubation_period = \(x) stats::rweibull(n = x, shape = 2.32, scale = 6.49),
  prop.asym = 0,
  prop.ascertain = 0
)
res
}
\author{
Joel Hellewell
}
