% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameter_sweep.R
\name{parameter_sweep}
\alias{parameter_sweep}
\title{Sweep across parameters}
\usage{
parameter_sweep(scenarios, sim_fn, samples = 1)
}
\arguments{
\item{scenarios}{a \code{data.frame}: containing all gridded scenarios - see the
examples for the required structure.}

\item{sim_fn}{a \code{function}: The vectorised model
simulation function - see the examples for usage.}

\item{samples}{a positive \code{integer} scalar: the number of samples to take.
Defaults to \code{1}.}
}
\value{
A nested \code{data.table} containing the parameters for each scenario
and a nested list of output from \code{\link[=scenario_sim]{scenario_sim()}}.
}
\description{
Explore scenarios using gridding with sampling for parameters
not in the grid. Parameters that are included in the grid are currently
hard coded. Use the \code{future} package to control parallisation outside of
the function.
}
\examples{
\dontshow{if (requireNamespace("data.table", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
library(data.table)
# Put parameters that are grouped by disease into this data.table
scenarios <- data.table(
  expand.grid(
    delay_group = list(data.table(
      delay = c("SARS", "Wuhan"),
      onset_to_isolation = c(
        \(x) rweibull(n = x, shape = 1.651524, scale = 4.287786),
        \(x) rweibull(n = x, shape = 2.305172, scale = 9.483875)
      )
    )),
    r0_community = c(1.1, 1.5),
    prop_presymptomatic = c(0.01, 0.15),
    prop_asymptomatic = c(0, 0.1),
    prop_ascertain = seq(0, 1, 0.25),
    initial_cases = c(5, 10),
    quarantine = FALSE
  )
)

list_cols <- grep("_group", colnames(scenarios), value = TRUE)
non_list_cols <- setdiff(colnames(scenarios), list_cols)

scenarios <- scenarios[, rbindlist(delay_group), by = c(non_list_cols)]
scenarios[, scenario :=  1:.N]

incub <- \(x) rweibull(n = x, shape = 1.65, scale = 4.28)
scenarios[, incubation_period := rep(list(incub), .N)]

## Parameterise fixed paramters
sim_with_params <- purrr::partial(
  ringbp::scenario_sim,
  cap_max_days = 365,
  cap_cases = 5000,
  r0_isolated = 0,
  disp_isolated = 1,
  disp_asymptomatic = 0.16,
  disp_community = 0.16
)

## parameter_sweep uses the future_lapply() function
## Default is to run sequntially on a single core
# future::plan("sequential")
## Set up multicore if using see ?future::plan for details
## Use the workers argument to control the number of cores used.
# future::plan("multiprocess")

## Run parameter sweep
sweep_results <- parameter_sweep(
  scenarios,
  sim_fn = sim_with_params,
  samples = 1
)

sweep_results
\dontshow{\}) # examplesIf}
}
